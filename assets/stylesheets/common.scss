/*
 * CSS General Functional Style
 * @Author: xiaoming.bai
 * @Date: 2018-11-27 11:02:41
 * @Last Modified by: xiaoming.bai
 * @Last Modified time: 2020-08-22 15:18:35
 */

// ******************************************* Layouts ******************************************* //

// Page container
.container {
  position: relative;
  width: 1190px;
  margin-right: auto;
  margin-left: auto;
}

// Transform centering
// Horizontally and vertically centers a child element within a parent element using `position: absolute` and `transform: translate()`.
// Similar to `flexbox`, this method does not require you to know the height or width of your parent or child so it is ideal for responsive applications.
.transform-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Flexbox centering
// Horizontally and vertically centers a child element within a parent element using `flexbox`.
.flexbox-center {
  display: flex;            // enables flexbox.
  align-items: center;      // centers the child vertically.
  justify-content: center;  // centers the child horizontally.
}

.screen-mask {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
}

.area-mask {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
}

// ******************************************* Functions ******************************************* //

// Display and Hide
.hide { display: none !important; }
.show { display: block !important; }
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

// Floating and Clearing Floating
.fl { float: left; }
.fr { float: right; }
.clearfix::after {
  display: block;
  clear: both;
  height: 0;
  visibility: hidden;
  content: '';
}

// Truncate text
// If the text is longer than one line, it will be truncated and end with an ellipsis `…`.
// ensures the element has a dimension, to know when to get ellipsis.
.ellipsis {
  overflow: hidden;
  white-space: nowrap;
  -ms-text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  word-wrap: break-word;
  word-break: break-all;
}

// Forbidden text to be selected
.unselectable {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// Hide mouse cursor
.uncursor {
  cursor: none;
}

// Remove input、button、select Ugly highlighted border when selected
.unoutline {
  outline: none;
}

// Remove textarea、input default styles (rounded corners and inner shadows on IOS, etc.)
.unappearance {
  -webkit-appearance: none;
}

// 去除移动端按钮 tap 后会出现一个半透明的灰色背景
.remove-tap-highlight {
  -webkit-tap-highlight-color: transparent;
}

// 鼠标禁用样式，但仍然可以触发事件
.notallowed {
  cursor: not-allowed;
}

// 禁用元素事件
// 1. 阻止任何点击动作的执行
// 2. 使链接显示为默认光标(cursor:default)
// 3. 阻止触发hover和active状态
// 4. 阻止JavaScript点击事件的触发
.unevents {
  pointer-events: none;
}

// Offscreen
// Completely hide an element visually and positionally in the DOM
.offscreen {
  position: absolute;
  left: -9999px;
}

// 隐藏文本，多用于 SEO
// <a href="/"><h1 class="hide-text">logo etc...</h1></a>
.hide-text {
  overflow: hidden;
  text-align: left;
  text-indent: -9999px;
}

// 文字模糊
.blur {
  -webkit-filter: blur(7px);
  filter: blur(7px);
}

// 书写模式：牌匾从右至左水平单行排版效果、文笺从右至左、从上至下排版效果
.retext-x {
  direction: rtl;
  unicode-bidi: bidi-override;
}
.retext-y {
  writing-mode: tb-rl;
  writing-mode: vertical-rl;
}

// 扩大热区
.extend-hotspot {
  position: relative;
  &::before {
    position: absolute;
    top: -10px;
    right: -10px;
    bottom: -10px;
    left: -10px;
    content: '';
  }
}

// ******************************************* Components ******************************************* //

// button
.btn {
  display: inline-block;
  box-sizing: border-box;
  padding: 2px 14px;
  white-space: nowrap;
  text-align: center;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.25s;
  user-select: none;
}
